{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matas\\\\Desktop\\\\Serverland\\\\Frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  const [loading, setLoading] = useState(true); // Add loading state\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    const timeout = setTimeout(() => {\n      setLoading(false); // Set loading to false after checking for user\n    }, 200);\n  }, []);\n\n  // Login function\n  const login = async (username, password) => {\n    try {\n      const apiUrl = `${config.apiBaseUrl}/api/login`;\n      const response = await axios.post(apiUrl, {\n        username,\n        password\n      }, {\n        withCredentials: true\n      });\n      setUser({\n        username\n      }); // Update user state\n      localStorage.setItem('user', JSON.stringify({\n        username\n      })); // Store user in localStorage\n      console.log(\"Login successful:\", response.data);\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  };\n\n  // Register function\n  const register = async (username, email, password) => {\n    try {\n      const apiUrl = `${config.apiBaseUrl}/api/register`;\n      await axios.post(apiUrl, {\n        username,\n        email,\n        password\n      }, {\n        withCredentials: true\n      });\n      await login(username, password); // After successful registration, login the user\n    } catch (error) {\n      console.error('Registration failed:', error);\n    }\n  };\n  const logout = async () => {\n    try {\n      var _document$cookie$spli;\n      // Retrieve the refresh token from cookies\n      const refreshToken = (_document$cookie$spli = document.cookie.split('; ').find(row => row.startsWith('RefreshToken'))) === null || _document$cookie$spli === void 0 ? void 0 : _document$cookie$spli.split('=')[1];\n      if (!refreshToken) {\n        console.error('No refresh token found');\n        return;\n      }\n\n      // Call the logout API\n      const apiUrl = `${config.apiBaseUrl}/api/logout`;\n      await axios.post(apiUrl, {\n        refreshToken\n      }, {\n        withCredentials: true\n      });\n\n      // Clear cookies by setting them to expire\n\n      // Clear local storage and reset user context\n      localStorage.clear();\n      setUser(null);\n      setAccessToken(null);\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n  const refreshAccessToken = async () => {\n    setLoading(true); // Set loading to true while refreshing token\n    try {\n      const apiUrl = `${config.apiBaseUrl}/api/accessToken`;\n      const response = await axios.post(apiUrl, {}, {\n        withCredentials: true\n      });\n      setAccessToken(response.data.accessToken);\n    } catch (error) {\n      console.error('Failed to refresh access token:', error);\n    } finally {\n      setLoading(false); // Loading is false after attempt\n    }\n  };\n  const waitForAccessToken = async () => {\n    if (!accessToken) {\n      await refreshAccessToken();\n    }\n    return accessToken;\n  };\n  useEffect(() => {\n    const interval = setInterval(refreshAccessToken, 5 * 60 * 1000); // Refresh every 5 minutes\n    return () => clearInterval(interval); // Clear interval on component unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      accessToken,\n      loading,\n      setAccessToken,\n      waitForAccessToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"h0prqyYnunaqiZlmu7/M4CGySJc=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","useNavigate","config","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","accessToken","setAccessToken","loading","setLoading","storedUser","localStorage","getItem","JSON","parse","timeout","setTimeout","login","username","password","apiUrl","apiBaseUrl","response","post","withCredentials","setItem","stringify","console","log","data","error","register","email","logout","_document$cookie$spli","refreshToken","document","cookie","split","find","row","startsWith","clear","refreshAccessToken","waitForAccessToken","interval","setInterval","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/matas/Desktop/Serverland/Frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport config from '../config';\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  const [loading, setLoading] = useState(true); // Add loading state\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    const timeout = setTimeout(() => {\n    setLoading(false); // Set loading to false after checking for user\n\n    }, 200);\n  }, []);\n\n\n  // Login function\n  const login = async (username, password) => {\n    try {\n      const apiUrl = `${config.apiBaseUrl}/api/login`;\n      const response = await axios.post(apiUrl, { username, password }, { withCredentials: true });\n      setUser({ username }); // Update user state\n      localStorage.setItem('user', JSON.stringify({ username })); // Store user in localStorage\n      console.log(\"Login successful:\", response.data);\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  };\n\n  \n\n  // Register function\n  const register = async (username, email, password) => {\n    try {\n      const apiUrl = `${config.apiBaseUrl}/api/register`;\n      await axios.post(apiUrl, { username, email, password }, { withCredentials: true });\n      await login(username, password); // After successful registration, login the user\n    } catch (error) {\n      console.error('Registration failed:', error);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      // Retrieve the refresh token from cookies\n      const refreshToken = document.cookie\n        .split('; ')\n        .find(row => row.startsWith('RefreshToken'))\n        ?.split('=')[1];\n      \n      if (!refreshToken) {\n        console.error('No refresh token found');\n        return;\n      }\n  \n      // Call the logout API\n      const apiUrl = `${config.apiBaseUrl}/api/logout`;\n      await axios.post(apiUrl, { refreshToken }, { withCredentials: true });\n  \n      // Clear cookies by setting them to expire\n  \n      // Clear local storage and reset user context\n      localStorage.clear();\n      setUser(null);\n      setAccessToken(null);\n  \n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n  \n\n  const refreshAccessToken = async () => {\n    setLoading(true); // Set loading to true while refreshing token\n    try {\n      const apiUrl = `${config.apiBaseUrl}/api/accessToken`;\n      const response = await axios.post(apiUrl, {}, { withCredentials: true });\n      setAccessToken(response.data.accessToken);\n    } catch (error) {\n      console.error('Failed to refresh access token:', error);\n    } finally {\n      setLoading(false); // Loading is false after attempt\n    }\n  };\n  \n  const waitForAccessToken = async () => {\n    if (!accessToken) {\n      await refreshAccessToken();\n    }\n    return accessToken;\n  };\n  useEffect(() => {\n    const interval = setInterval(refreshAccessToken, 5 * 60 * 1000); // Refresh every 5 minutes\n    return () => clearInterval(interval); // Clear interval on component unmount\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, login, register, logout, accessToken, loading, setAccessToken, waitForAccessToken }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}