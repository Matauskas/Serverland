{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matas\\\\Desktop\\\\Serverland\\\\Frontend\\\\src\\\\pages\\\\PartsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport config from '../config';\nimport { useAuth } from '../context/AuthContext';\nimport './PartsPage.css'; // Ensure this is the correct path to the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PartsPage = () => {\n  _s();\n  const {\n    categoryId,\n    serverId\n  } = useParams(); // Extract categoryId and serverId from the URL\n  const [parts, setParts] = useState([]);\n  const [editingPart, setEditingPart] = useState(null);\n  const [editForm, setEditForm] = useState({\n    cpu: '',\n    ram: '',\n    raid: '',\n    network: '',\n    ssd: '',\n    hdd: '',\n    psu: '',\n    rails: ''\n  });\n  const [newPart, setNewPart] = useState({\n    cpu: '',\n    ram: '',\n    raid: '',\n    network: '',\n    ssd: '',\n    hdd: '',\n    psu: '',\n    rails: ''\n  });\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const {\n    waitForAccessToken\n  } = useAuth();\n\n  // Fetch parts when serverId changes\n  useEffect(() => {\n    const fetchParts = async () => {\n      try {\n        const token = await waitForAccessToken();\n        const response = await axios.get(`${config.apiBaseUrl}/api/category/${categoryId}/server/${serverId}/part`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setParts(response.data);\n      } catch (error) {\n        console.error('Error fetching parts:', error);\n      }\n    };\n    if (serverId) {\n      fetchParts();\n    }\n  }, [serverId, categoryId, waitForAccessToken]);\n\n  // Open Edit Modal\n  const openEditModal = part => {\n    setEditingPart(part);\n    setEditForm({\n      cpu: part.cpu,\n      ram: part.ram,\n      raid: part.raid,\n      network: part.network,\n      ssd: part.ssd,\n      hdd: part.hdd,\n      psu: part.psu,\n      rails: part.rails\n    });\n  };\n\n  // Close Edit Modal\n  const closeEditModal = () => setEditingPart(null);\n\n  // Save Edited Part\n  const handleEditSave = async () => {\n    try {\n      const token = await waitForAccessToken();\n      await axios.put(`${config.apiBaseUrl}/api/category/${categoryId}/server/${serverId}/part/${editingPart.id}`, editForm, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setParts(parts.map(part => part.id === editingPart.id ? {\n        ...part,\n        ...editForm\n      } : part));\n      closeEditModal();\n    } catch (error) {\n      console.error('Error saving edited part:', error);\n    }\n  };\n\n  // Open Create Modal\n  const openCreateModal = () => {\n    setNewPart({\n      cpu: '',\n      ram: '',\n      raid: '',\n      network: '',\n      ssd: '',\n      hdd: '',\n      psu: '',\n      rails: ''\n    });\n    setIsCreateModalOpen(true);\n  };\n\n  // Close Create Modal\n  const closeCreateModal = () => setIsCreateModalOpen(false);\n\n  // Create a New Part\n  const handleCreateSave = async () => {\n    try {\n      const token = await waitForAccessToken();\n      const partData = {\n        cpu: newPart.cpu,\n        ram: newPart.ram,\n        raid: newPart.raid,\n        network: newPart.network,\n        ssd: newPart.ssd,\n        hdd: newPart.hdd,\n        psu: newPart.psu,\n        rails: newPart.rails === 'true' || newPart.rails === true,\n        // Ensure boolean type\n        serverId: parseInt(serverId, 10) // Ensure numeric type\n      };\n      const response = await axios.post(`${config.apiBaseUrl}/api/category/${categoryId}/server/${serverId}/part`, partData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setParts([response.data, ...parts]);\n      closeCreateModal();\n    } catch (error) {\n      console.error('Error creating part:', error);\n    }\n  };\n\n  // Handle Part Deletion\n  const handleDelete = async partId => {\n    try {\n      const token = await waitForAccessToken();\n      await axios.delete(`${config.apiBaseUrl}/api/category/${categoryId}/server/${serverId}/part/${partId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setParts(parts.filter(part => part.id !== partId));\n    } catch (error) {\n      console.error('Error deleting part:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"parts-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Parts for Server \", serverId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-new-button\",\n      onClick: openCreateModal,\n      children: \"Create New Part\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"part-list\",\n      children: parts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No parts available for this server.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this) : parts.map(part => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"part-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"CPU: \", part.cpu]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"RAM: \", part.ram, \" GB\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"RAID: \", part.raid]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Network: \", part.network]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"SSD: \", part.ssd, \" GB\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"HDD: \", part.hdd, \" GB\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"PSU: \", part.psu, \" W\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rails: \", part.rails]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: () => openEditModal(part),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: () => handleDelete(part.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)]\n      }, part.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), editingPart && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"CPU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editForm.cpu,\n          onChange: e => setEditForm({\n            ...editForm,\n            cpu: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"RAM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: editForm.ram,\n          onChange: e => setEditForm({\n            ...editForm,\n            ram: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"RAID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editForm.raid,\n          onChange: e => setEditForm({\n            ...editForm,\n            raid: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Network\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editForm.network,\n          onChange: e => setEditForm({\n            ...editForm,\n            network: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"SSD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: editForm.ssd,\n          onChange: e => setEditForm({\n            ...editForm,\n            ssd: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"HDD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: editForm.hdd,\n          onChange: e => setEditForm({\n            ...editForm,\n            hdd: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"PSU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: editForm.psu,\n          onChange: e => setEditForm({\n            ...editForm,\n            psu: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rails\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editForm.rails,\n          onChange: e => setEditForm({\n            ...editForm,\n            rails: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-button\",\n            onClick: handleEditSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: closeEditModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), isCreateModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create New Part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"CPU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newPart.cpu,\n          onChange: e => setNewPart({\n            ...newPart,\n            cpu: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"RAM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: newPart.ram,\n          onChange: e => setNewPart({\n            ...newPart,\n            ram: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"RAID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newPart.raid,\n          onChange: e => setNewPart({\n            ...newPart,\n            raid: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Network\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newPart.network,\n          onChange: e => setNewPart({\n            ...newPart,\n            network: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"SSD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: newPart.ssd,\n          onChange: e => setNewPart({\n            ...newPart,\n            ssd: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"HDD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: newPart.hdd,\n          onChange: e => setNewPart({\n            ...newPart,\n            hdd: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"PSU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: newPart.psu,\n          onChange: e => setNewPart({\n            ...newPart,\n            psu: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rails\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newPart.rails,\n          onChange: e => setNewPart({\n            ...newPart,\n            rails: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-button\",\n            onClick: handleCreateSave,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: closeCreateModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(PartsPage, \"Hy+vHJ0roGQRBgyUNCH7xv9yyhQ=\", false, function () {\n  return [useParams, useAuth];\n});\n_c = PartsPage;\nexport default PartsPage;\nvar _c;\n$RefreshReg$(_c, \"PartsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","config","useAuth","jsxDEV","_jsxDEV","PartsPage","_s","categoryId","serverId","parts","setParts","editingPart","setEditingPart","editForm","setEditForm","cpu","ram","raid","network","ssd","hdd","psu","rails","newPart","setNewPart","isCreateModalOpen","setIsCreateModalOpen","waitForAccessToken","fetchParts","token","response","get","apiBaseUrl","headers","Authorization","data","error","console","openEditModal","part","closeEditModal","handleEditSave","put","id","map","openCreateModal","closeCreateModal","handleCreateSave","partData","parseInt","post","handleDelete","partId","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/matas/Desktop/Serverland/Frontend/src/pages/PartsPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport config from '../config';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport './PartsPage.css'; // Ensure this is the correct path to the CSS file\r\n\r\nconst PartsPage = () => {\r\n  const { categoryId, serverId } = useParams(); // Extract categoryId and serverId from the URL\r\n  const [parts, setParts] = useState([]);\r\n  const [editingPart, setEditingPart] = useState(null);\r\n  const [editForm, setEditForm] = useState({\r\n    cpu: '',\r\n    ram: '',\r\n    raid: '',\r\n    network: '',\r\n    ssd: '',\r\n    hdd: '',\r\n    psu: '',\r\n    rails: '',\r\n  });\r\n  const [newPart, setNewPart] = useState({\r\n    cpu: '',\r\n    ram: '',\r\n    raid: '',\r\n    network: '',\r\n    ssd: '',\r\n    hdd: '',\r\n    psu: '',\r\n    rails: '',\r\n  });\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n  const { waitForAccessToken } = useAuth();\r\n\r\n  // Fetch parts when serverId changes\r\n  useEffect(() => {\r\n    const fetchParts = async () => {\r\n      try {\r\n        const token = await waitForAccessToken();\r\n        const response = await axios.get(\r\n          `${config.apiBaseUrl}/api/category/${categoryId}/server/${serverId}/part`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        setParts(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching parts:', error);\r\n      }\r\n    };\r\n\r\n    if (serverId) {\r\n      fetchParts();\r\n    }\r\n  }, [serverId, categoryId, waitForAccessToken]);\r\n\r\n  // Open Edit Modal\r\n  const openEditModal = (part) => {\r\n    setEditingPart(part);\r\n    setEditForm({\r\n      cpu: part.cpu,\r\n      ram: part.ram,\r\n      raid: part.raid,\r\n      network: part.network,\r\n      ssd: part.ssd,\r\n      hdd: part.hdd,\r\n      psu: part.psu,\r\n      rails: part.rails,\r\n    });\r\n  };\r\n\r\n  // Close Edit Modal\r\n  const closeEditModal = () => setEditingPart(null);\r\n\r\n  // Save Edited Part\r\n  const handleEditSave = async () => {\r\n    try {\r\n      const token = await waitForAccessToken();\r\n      await axios.put(\r\n        `${config.apiBaseUrl}/api/category/${categoryId}/server/${serverId}/part/${editingPart.id}`,\r\n        editForm,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setParts(parts.map((part) =>\r\n        part.id === editingPart.id ? { ...part, ...editForm } : part\r\n      ));\r\n      closeEditModal();\r\n    } catch (error) {\r\n      console.error('Error saving edited part:', error);\r\n    }\r\n  };\r\n\r\n  // Open Create Modal\r\n  const openCreateModal = () => {\r\n    setNewPart({\r\n      cpu: '',\r\n      ram: '',\r\n      raid: '',\r\n      network: '',\r\n      ssd: '',\r\n      hdd: '',\r\n      psu: '',\r\n      rails: '',\r\n    });\r\n    setIsCreateModalOpen(true);\r\n  };\r\n\r\n  // Close Create Modal\r\n  const closeCreateModal = () => setIsCreateModalOpen(false);\r\n\r\n  // Create a New Part\r\n  const handleCreateSave = async () => {\r\n    try {\r\n      const token = await waitForAccessToken();\r\n      const partData = {\r\n        cpu: newPart.cpu,\r\n        ram: newPart.ram,\r\n        raid: newPart.raid,\r\n        network: newPart.network,\r\n        ssd: newPart.ssd,\r\n        hdd: newPart.hdd,\r\n        psu: newPart.psu,\r\n        rails: newPart.rails === 'true' || newPart.rails === true, // Ensure boolean type\r\n        serverId: parseInt(serverId, 10), // Ensure numeric type\r\n      };\r\n  \r\n      const response = await axios.post(\r\n        `${config.apiBaseUrl}/api/category/${categoryId}/server/${serverId}/part`,\r\n        partData,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n  \r\n      setParts([response.data, ...parts]);\r\n      closeCreateModal();\r\n    } catch (error) {\r\n      console.error('Error creating part:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  // Handle Part Deletion\r\n  const handleDelete = async (partId) => {\r\n    try {\r\n      const token = await waitForAccessToken();\r\n      await axios.delete(\r\n        `${config.apiBaseUrl}/api/category/${categoryId}/server/${serverId}/part/${partId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setParts(parts.filter((part) => part.id !== partId));\r\n    } catch (error) {\r\n      console.error('Error deleting part:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"parts-page\">\r\n      <h2>Parts for Server {serverId}</h2>\r\n      <button className=\"create-new-button\" onClick={openCreateModal}>Create New Part</button>\r\n\r\n      <div className=\"part-list\">\r\n        {parts.length === 0 ? (\r\n          <p>No parts available for this server.</p>\r\n        ) : (\r\n          parts.map((part) => (\r\n            <div key={part.id} className=\"part-item\">\r\n              <p>CPU: {part.cpu}</p>\r\n              <p>RAM: {part.ram} GB</p>\r\n              <p>RAID: {part.raid}</p>\r\n              <p>Network: {part.network}</p>\r\n              <p>SSD: {part.ssd} GB</p>\r\n              <p>HDD: {part.hdd} GB</p>\r\n              <p>PSU: {part.psu} W</p>\r\n              <p>Rails: {part.rails}</p>\r\n              <button className=\"edit-button\" onClick={() => openEditModal(part)}>Edit</button>\r\n              <button className=\"delete-button\" onClick={() => handleDelete(part.id)}>Delete</button>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {editingPart && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h2>Edit Part</h2>\r\n            <label>CPU</label>\r\n            <input\r\n              type=\"text\"\r\n              value={editForm.cpu}\r\n              onChange={(e) => setEditForm({ ...editForm, cpu: e.target.value })}\r\n            />\r\n            <label>RAM</label>\r\n            <input\r\n              type=\"number\"\r\n              value={editForm.ram}\r\n              onChange={(e) => setEditForm({ ...editForm, ram: e.target.value })}\r\n            />\r\n            <label>RAID</label>\r\n            <input\r\n              type=\"text\"\r\n              value={editForm.raid}\r\n              onChange={(e) => setEditForm({ ...editForm, raid: e.target.value })}\r\n            />\r\n            <label>Network</label>\r\n            <input\r\n              type=\"text\"\r\n              value={editForm.network}\r\n              onChange={(e) => setEditForm({ ...editForm, network: e.target.value })}\r\n            />\r\n            <label>SSD</label>\r\n            <input\r\n              type=\"number\"\r\n              value={editForm.ssd}\r\n              onChange={(e) => setEditForm({ ...editForm, ssd: e.target.value })}\r\n            />\r\n            <label>HDD</label>\r\n            <input\r\n              type=\"number\"\r\n              value={editForm.hdd}\r\n              onChange={(e) => setEditForm({ ...editForm, hdd: e.target.value })}\r\n            />\r\n            <label>PSU</label>\r\n            <input\r\n              type=\"number\"\r\n              value={editForm.psu}\r\n              onChange={(e) => setEditForm({ ...editForm, psu: e.target.value })}\r\n            />\r\n            <label>Rails</label>\r\n            <input\r\n              type=\"text\"\r\n              value={editForm.rails}\r\n              onChange={(e) => setEditForm({ ...editForm, rails: e.target.value })}\r\n            />\r\n            <div className=\"modal-actions\">\r\n              <button className=\"save-button\" onClick={handleEditSave}>Save</button>\r\n              <button className=\"cancel-button\" onClick={closeEditModal}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isCreateModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h2>Create New Part</h2>\r\n            <label>CPU</label>\r\n            <input\r\n              type=\"text\"\r\n              value={newPart.cpu}\r\n              onChange={(e) => setNewPart({ ...newPart, cpu: e.target.value })}\r\n            />\r\n            <label>RAM</label>\r\n            <input\r\n              type=\"number\"\r\n              value={newPart.ram}\r\n              onChange={(e) => setNewPart({ ...newPart, ram: e.target.value })}\r\n            />\r\n            <label>RAID</label>\r\n            <input\r\n              type=\"text\"\r\n              value={newPart.raid}\r\n              onChange={(e) => setNewPart({ ...newPart, raid: e.target.value })}\r\n            />\r\n            <label>Network</label>\r\n            <input\r\n              type=\"text\"\r\n              value={newPart.network}\r\n              onChange={(e) => setNewPart({ ...newPart, network: e.target.value })}\r\n            />\r\n            <label>SSD</label>\r\n            <input\r\n              type=\"number\"\r\n              value={newPart.ssd}\r\n              onChange={(e) => setNewPart({ ...newPart, ssd: e.target.value })}\r\n            />\r\n            <label>HDD</label>\r\n            <input\r\n              type=\"number\"\r\n              value={newPart.hdd}\r\n              onChange={(e) => setNewPart({ ...newPart, hdd: e.target.value })}\r\n            />\r\n            <label>PSU</label>\r\n            <input\r\n              type=\"number\"\r\n              value={newPart.psu}\r\n              onChange={(e) => setNewPart({ ...newPart, psu: e.target.value })}\r\n            />\r\n            <label>Rails</label>\r\n            <input\r\n              type=\"text\"\r\n              value={newPart.rails}\r\n              onChange={(e) => setNewPart({ ...newPart, rails: e.target.value })}\r\n            />\r\n            <div className=\"modal-actions\">\r\n              <button className=\"save-button\" onClick={handleCreateSave}>Create</button>\r\n              <button className=\"cancel-button\" onClick={closeCreateModal}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PartsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}